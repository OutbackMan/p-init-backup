dist: trusty

git:
  depth: 1

branches:
  only:
    - master
    - release

notifications:
  email: false
  webhooks:
    urls:
	  - https://www.webhooks.gitter.im
	  on_success: always
	  on_failure: always

# libsdl-ttf2.0.0-dev, llibsdl-image2.0.0-dev

matrix:
  include:
    - language: c 
	  compiler: gcc
	  os: linux
	  addons:
	    apt:
		  sources:
		    - ubuntu-toolchain-r-test
          packages:
		    - gcc-4.9
			- libsdl2-dev
	  before_script:
	    - export CC=gcc-4.9 
	  script:
	    - cmake .
        - cmake --build . -- -j2
        - ctest -j2

    - language: c 
	  compiler: gcc
	  os: linux
	  addons:
	    apt:
		  sources:
		    - ubuntu-toolchain-r-test
          packages:
		    - gcc-5
			- libsdl2-dev
	  before_script:
	    - export CC=gcc-5 
	  script:
	    - cmake .
        - cmake --build . -- -j2
        - ctest -j2

    - language: c 
	  compiler: gcc
	  os: linux
	  addons:
	    apt:
		  sources:
		    - ubuntu-toolchain-r-test
          packages:
		    - gcc-6
			- libsdl2-dev
	  before_script:
	    - export CC=gcc-6
	  script:
	    - cmake .
        - cmake --build . -- -j2
        - ctest -j2

    - language: c 
	  compiler: gcc
	  os: linux
	  addons:
	    apt:
		  sources:
		    - ubuntu-toolchain-r-test
          packages:
		    - gcc-7
			- libsdl2-dev
	  before_script:
	    - export CC=gcc-7
	  script:
	    - cmake .
        - cmake --build . -- -j2
        - ctest -j2

    - language: c 
	  compiler: clang
	  os: linux
	  addons:
	    apt:
		  sources:
		    - ubuntu-toolchain-r-test
			- llvm-toolchain-trusty-6.0
          packages:
		    - clang-6.0
	  env:
	    - MATRIX_EVAL="CC=clang-6.0"

    - language: c 
	  compiler: clang
	  os: linux
	  addons:
	    apt:
		  sources:
		    - ubuntu-toolchain-r-test
			- llvm-toolchain-trusty-7.0
          packages:
		    - clang-7.0 
	  env:
	    - MATRIX_EVAL="CC=clang-7.0"

    - language: c 
	  compiler: clang
	  os: linux
	  addons:
	    apt:
		  sources:
		    - ubuntu-toolchain-r-test
			- llvm-toolchain-trusty-8.0
          packages:
		    - clang-8.0 
	  env:
	    - MATRIX_EVAL="CC=clang-8.0"

    - language: c 
	  compiler: clang
	  os: linux
	  addons:
	    apt:
		  sources:
		    - ubuntu-toolchain-r-test
			- llvm-toolchain-trusty-9.0
          packages:
		    - clang-9.0 
	  env:
	    - MATRIX_EVAL="CC=clang-9.0"

	- language: c
	  compiler: clang
	  os: osx
	  osx_image: xcode6.4 

	- language: c
	  compiler: clang
	  os: osx
	  osx_image: xcode7.3 

	- language: c
	  compiler: clang
	  os: osx
	  osx_image: xcode8 

	- language: c
	  compiler: clang
	  os: osx
	  osx_image: xcode9 

	- language: c
	  compiler: gcc
	  os: osx
	  osx_image: xcode8
	  env:
	    - MATRIX_EVAL="brew install gcc-4.9 && CC=gcc-4.9"

	- language: c
	  compiler: gcc
	  os: osx
	  osx_image: xcode8
	  env:
	    - MATRIX_EVAL="brew install gcc-5 && CC=gcc-5"

	- language: c
	  compiler: gcc
	  os: osx
	  osx_image: xcode8
	  env:
	    - MATRIX_EVAL="brew install gcc-6 && CC=gcc-6"

	- language: c
	  compiler: gcc
	  os: osx
	  osx_image: xcode8
	  env:
	    - MATRIX_EVAL="brew install gcc-7 && CC=gcc-7"

#	- sudo: required 
#	  language: node_js
#	  node_js: 
#	    - node
#	  services: 
#	    - docker
#	  before_install:
#		- docker run -dit --name emscripten -v $(pwd):/src trzeci/emscripten:sdk-incoming-64bit bash 
#	  script:
#	    - docker exec -it emscripten cmake .
#		- cmake --build . -- -j2 

# find_package(java)
# ndk, sdk
# gradle (updated java make)

# android ndk (native development kit) facilitates C. android SDK allows java to interact with C kernel.
# C code uses JNI (java native interface) to interact with java

# java activity (in android activity is the smallest action that can be taken) invokes our c code
# so project in android java project with c support code -> produce .apk


# FROM GITHUB android-readme.md
# mv android-project/ game-android/
# only support builds on linux and macosx
language: android
android:
  components:
    - tools
	- platform-tools
	- tools # necessary for most recent
    - build-tools-26.0.2
	- android-26
os: linux
jdk: oraclejdk8
install:
  - echo y | sdkmanager "ndk-bundle"

# have to compile into macosx 'framework', i.e. dynamic library and others
# ios sdk 7+
language: objective-c
script:
  - xcodebuild





